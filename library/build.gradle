/*
 * Copyright (c) 2017. Jahir Fiquitiva
 *
 * Licensed under the CreativeCommons Attribution-ShareAlike
 * 4.0 International License. You may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *    http://creativecommons.org/licenses/by-sa/4.0/legalcode
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion project.ext.compileSdk
    buildToolsVersion project.ext.buildTools

    lintOptions {
        warningsAsErrors true
        disable 'MissingTranslation',
                'GoogleAppIndexingWarning',
                'UnusedResources',
                'ContentDescription',
                'RtlSymmetry',
                'RtlHardcoded',
                'RtlEnabled',
                'Overdraw'
    }

    defaultConfig {
        minSdkVersion project.ext.minSdk
        targetSdkVersion project.ext.targetSdk
        versionCode project.ext.versionCode
        versionName project.ext.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
    }

    dexOptions {
        jumboMode true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-android-optimize.pro', 'proguard-rules.pro'
            consumerProguardFiles 'proguard-android-optimize.pro', 'proguard-rules.pro'
        }
    }

    sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
        main.res.srcDirs += [
                    'src/main/res/drawable/app',
                    'src/main/res/drawable/clock_widget',
                    'src/main/res/drawable/launchers_icons',
                    'src/main/res/drawable/shortcuts',
                    'src/main/res/drawable/splash_screens',
                    'src/main/res/drawable/ui',
                    'src/main/res/drawable',
                    'src/main/res/layout/activities',
                    'src/main/res/layout/extras',
                    'src/main/res/layout/items',
                    'src/main/res/layout/sections',
                    'src/main/res/layout/widgets',
                    'src/main/res/layout',
                    'src/main/res/values/icon_pack',
                    'src/main/res/values/private-values',
                    'src/main/res/values/translations',
                    'src/main/res/values',
                    'src/main/res'
            ]
    }

    packagingOptions {
        pickFirst 'META-INF/core_release.kotlin_module'
        pickFirst 'META-INF/library_release.kotlin_module'
    }
}

dependencies {
    // Frames
    compile project(path: ':frames')
	// Kotlin
    compile 'org.jetbrains.kotlin:kotlin-stdlib:' + project.ext.kotlin
    // TODO: Delete Multidex
    compile 'com.android.support:multidex:' + project.ext.multidex

    // Navigation
    compile('com.mikepenz:materialdrawer:' + project.ext.materialDrawer + '@aar') {
        transitive = true
    }
    compile 'com.aurelhubert:ahbottomnavigation:' + project.ext.bottomBar
    // Icon Requests Tool
    compile 'com.github.AllanWang:Icon-Request-Tool:' + project.ext.iconRequestTool
    // FABs Menu
    compile 'me.jahirfiquitiva:FABsMenu:' + project.ext.fabsMenu
    // CounterFab
    compile 'com.github.andremion:counterfab:' + project.ext.counterFab
    // Chips View
    compile 'me.jahirfiquitiva:MaterialChipsInput:' + project.ext.chips
    // Material Number Picker
    compile 'biz.kasual:materialnumberpicker:' + project.ext.mnp

    // Architecture Components
    compile 'android.arch.lifecycle:runtime:' + project.ext.archComponents
    compile 'android.arch.lifecycle:extensions:' + project.ext.archComponents
    compile 'android.arch.persistence.room:runtime:' + project.ext.archComponents
    annotationProcessor 'android.arch.lifecycle:compiler:' + project.ext.archComponents
    annotationProcessor 'android.arch.persistence.room:compiler:' + project.ext.archComponents
    kapt 'android.arch.lifecycle:compiler:' + project.ext.archComponents
    kapt 'android.arch.persistence.room:compiler:' + project.ext.archComponents
    // Material Dialogs
    compile 'com.afollestad.material-dialogs:core:' + project.ext.materialDialogs
    compile 'com.afollestad.material-dialogs:commons:' + project.ext.materialDialogs
    // Volley
    compile 'com.android.volley:volley:' + project.ext.volley
    // Glide Image Loading
    compile 'com.github.bumptech.glide:glide:' + project.ext.glide
    // compile 'com.github.bumptech.glide:annotations:' + project.ext.glide
    // annotationProcessor 'com.github.bumptech.glide:compiler:' + project.ext.glide
    // kapt 'com.github.bumptech.glide:compiler:' + project.ext.glide
    // KAU Extensions
    compile 'me.jahirfiquitiva.KAUExtensions:core:' + project.ext.kauExt
    compile 'me.jahirfiquitiva.KAUExtensions:ziv:' + project.ext.kauExt
    // Sectioned RecyclerView
    compile 'com.afollestad:sectioned-recyclerview:' + project.ext.sectionedRecyclerView
    // RecyclerView Fast Scroller
    compile ('me.jahirfiquitiva:recycler-fast-scroll:' + project.ext.recyclerViewFastScroll + '@aar')
    // In-App Purchases
    compile 'com.anjlab.android.iab.v3:library:' + project.ext.iaps
    // Muzei API
    //noinspection GradleDynamicVersion
    compile 'com.google.android.apps.muzei:muzei-api:' + project.ext.muzeiApi
    // Licenses Dialog
    compile 'de.psdev.licensesdialog:licensesdialog:' + project.ext.licensesDialog
    // License Checker
    compile 'com.github.javiersantos:PiracyChecker:' + project.ext.checker
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("lint") || task.name.contains("test")) {
        task.enabled = false
    }
}

apply from: '../lib-artifacts.gradle'