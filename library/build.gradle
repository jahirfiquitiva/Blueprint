/*
 * Copyright (c) 2017. Jahir Fiquitiva
 *
 * Licensed under the CreativeCommons Attribution-ShareAlike
 * 4.0 International License. You may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *    http://creativecommons.org/licenses/by-sa/4.0/legalcode
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: '../dependencies.gradle'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation'
        disable 'GoogleAppIndexingWarning'
    }

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            res.srcDirs += [
                    'src/main/res',
                    'src/main/res/drawable',
                    'src/main/res/drawable/app',
                    'src/main/res/drawable/clock_widget',
                    'src/main/res/drawable/launchers_icons',
                    'src/main/res/drawable/shortcuts',
                    'src/main/res/drawable/splash_screens',
                    'src/main/res/drawable/ui',
                    'src/main/res/layout',
                    'src/main/res/layout/activities',
                    'src/main/res/layout/extras',
                    'src/main/res/layout/items',
                    'src/main/res/layout/sections',
                    'src/main/res/layout/widgets',
                    'src/main/res/values',
                    'src/main/res/values/icon_pack',
                    'src/main/res/values/private-values',
                    'src/main/res/values/translations'
            ]
        }
    }
}

dependencies {
    // Frames
    compile project(path: ':frames')

    // Navigation
    compile('com.mikepenz:materialdrawer:' + versions.materialDrawer + '@aar') {
        transitive = true
    }
    compile 'com.aurelhubert:ahbottomnavigation:' + versions.bottomBar
    // Icon Requests Tool
    compile 'com.github.AllanWang:Icon-Request-Tool:' + versions.iconRequestTool
    // FABs Menu
    compile 'me.jahirfiquitiva:FABsMenu:' + versions.fabsMenu
    // FAB Transformation
    compile 'konifar:fab-transformation:' + versions.fabTransformation
    // Chips View
    compile 'me.jahirfiquitiva:MaterialChipsInput:' + versions.chips

    // Architecture Components
    compile 'android.arch.lifecycle:runtime:' + versions.archComponents
    compile 'android.arch.lifecycle:extensions:' + versions.archComponents
    compile 'android.arch.persistence.room:runtime:' + versions.archComponents
    annotationProcessor 'android.arch.lifecycle:compiler:' + versions.archComponents
    annotationProcessor 'android.arch.persistence.room:compiler:' + versions.archComponents
    kapt 'android.arch.lifecycle:compiler:' + versions.archComponents
    kapt 'android.arch.persistence.room:compiler:' + versions.archComponents
    // Material Dialogs
    compile 'com.afollestad.material-dialogs:core:' + versions.materialDialogs
    compile 'com.afollestad.material-dialogs:commons:' + versions.materialDialogs
    // Volley
    compile 'com.android.volley:volley:' + versions.volley
    // Glide Image Loading
    compile 'com.github.bumptech.glide:glide:' + versions.glide
    // annotationProcessor 'com.github.bumptech.glide:compiler:' + versions.glide
    // kapt 'com.github.bumptech.glide:compiler:' + versions.glide
    // KAU Extensions
    compile 'me.jahirfiquitiva:KAUExtensions:' + versions.kauExt
    // Sectioned RecyclerView
    compile 'com.afollestad:sectioned-recyclerview:' + versions.sectionedRecyclerView
    // RecyclerView Fast Scroller
    compile 'com.github.plusCubed:recycler-fast-scroll:' + versions.recyclerViewFastScroll
    // Floating Toolbar
    compile 'com.github.rubensousa:floatingtoolbar:' + versions.floatingToolbar
    // Subsampling ImageView
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:' + versions.subsImageView
    // In-App Purchases
    compile 'com.anjlab.android.iab.v3:library:' + versions.iaps
    // Muzei API
    //noinspection GradleDynamicVersion
    compile 'com.google.android.apps.muzei:muzei-api:' + versions.muzeiApi
    // Licenses Dialog
    compile 'de.psdev.licensesdialog:licensesdialog:' + versions.licensesDialog
    // License Checker
    compile 'com.github.javiersantos:PiracyChecker:' + versions.checker
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("lint") || task.name.contains("test")) {
        task.enabled = false
    }
}

apply from: '../lib-artifacts.gradle'